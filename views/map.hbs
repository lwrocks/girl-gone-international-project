<a href="/community">View Our Communities</a>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js"></script>

<!-- This is an empty `<div>` to which we give an `id` to target it in the `js` later on, to make it our container for the map and that we can also set dimensions for -->

<div id="map" style="width: 1200px; height: 450px;">
  <script>
    mapboxgl.accessToken =
      "pk.eyJ1IjoibHdyb2NrcyIsImEiOiJjazZnOTYxb2owN2p2M21rNmFic3Z6enBqIn0.Q0wTUupueKvy1qIiWi1bdQ"; // the mapbox token is required to display the map
    const map = new mapboxgl.Map({
      container: "map", // this refers to the `id` attribute that we gave to our empty div in the HTML
      style: "mapbox://styles/mapbox/streets-v11", // mapbox comes with a preset of styles that we can use and allows to customize and share map styles with other users
      center: [13.9695, 19.2696],
      //maxBounds: [[-141.4237, -65.1617], [179.3369, 82.8674]],
      zoom: 1
    });

    axios
      .get(`/communities`)
      .then(response => {
        console.log(response);

        let communities = response.data; // the array of coordinates that we are sending from our backend route

        communities.forEach((community) => {
          console.log(community.coordinates)
          const marker = new mapboxgl.Marker();

          marker.setLngLat(community.coordinates.reverse()); // and we'll use that array as the coordinates for our marker

          marker.addTo(map);
          console.log(communities)
          const popup = new mapboxgl.Popup();
          popup.setLngLat(community.coordinates); // in order to have longitude before latitude the data is reversed because it appears as latitude before longitude but if it is reversed here it will be reversed a second time negating the effect thus for the second time it is left as is
          popup.setHTML("<div><h3>" + community.location + "</h3><p>Community Size: " + community.communitySize + `</p><a href="/community/${community._id}">Community Page</a></div>`);
          marker.setPopup(popup);
        })

        return
        marker.on("dragend", data => {
          const coord = data.target.coordinates;             //getLngLat().toArray();

          axios
            .patch(`http://localhost:3000/communities`, { coordinates: coord })
            .then(() => {
              console.log("communities shown!");
            })
            .catch(err => {
              console.log(err);
            });
        });
      })
      .catch(err => {
        console.log(err);
      });



  </script>
</div>